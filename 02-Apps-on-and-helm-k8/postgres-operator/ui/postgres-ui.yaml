apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "postgres-operator-ui"
  namespace: "default"
  labels:
    application: "postgres-operator-ui"
    team: "acid"
spec:
  replicas: 1
  selector:
    matchLabels:
      application: "postgres-operator-ui"
  template:
    metadata:
      labels:
        application: "postgres-operator-ui"
        team: "acid"
    spec:
      serviceAccountName: postgres-operator-ui
      containers:
        - name: "service"
          image: muratkarslioglu/postgres-operator-ui:v1.2.0
          ports:
            - containerPort: 8081
              protocol: "TCP"
          readinessProbe:
            httpGet:
              path: "/health"
              port: 8081
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "300m"
              memory: "3000Mi"
            requests:
              cpu: "100m"
              memory: "100Mi"
          env:
            - name: "APP_URL"
              value: "http://localhost:8081"
            - name: "OPERATOR_API_URL"
              value: "http://localhost:8080"
            - name: "TARGET_NAMESPACE"
              value: "default"
            - name: "TEAMS"
              value: |-
                [
                  "acid"
                ]
            - name: "OPERATOR_UI_CONFIG"
              value: |-
                {
                  "docs_link":"https://postgres-operator.readthedocs.io/en/latest/",
                  "dns_format_string": "{1}-{0}.{2}",
                  "databases_visible": true,
                  "master_load_balancer_visible": true,
                  "nat_gateways_visible": false,
                  "replica_load_balancer_visible": true,
                  "resources_visible": true,
                  "users_visible": true,
                  "postgresql_versions": [
                    "11",
                    "10",
                    "9.6"
                  ]
                }
---
apiVersion: "networking.k8s.io/v1beta1"
kind: "Ingress"
metadata:
  name: "postgres-operator-ui"
  namespace: "default"
  labels:
    application: "postgres-operator-ui"
spec:
  rules:
    - host: "ui.example.org"
      http:
        paths:
          - backend:
              serviceName: "postgres-operator-ui"
              servicePort: 80
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "postgres-operator-ui"
  namespace: "default"
  labels:
    application: "postgres-operator-ui"
spec:
  type: "ClusterIP"
  selector:
    application: "postgres-operator-ui"
  ports:
    - port: 80
      protocol: "TCP"
      targetPort: 8081
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres-operator-ui
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: postgres-operator-ui
rules:
- apiGroups:
  - acid.zalan.do
  resources:
  - postgresqls
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: postgres-operator-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: postgres-operator-ui
subjects:
- kind: ServiceAccount
# note: the cluster role binding needs to be defined
# for every namespace the operator-ui service account lives in.
  name: postgres-operator-ui
  namespace: default

